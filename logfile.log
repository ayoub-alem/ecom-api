{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Parameter \"filter\" to findOne() must be an object, got ahmadalem Parameter \"filter\" to findOne() must be an object, got ahmadalem","stack":"ObjectParameterError: Parameter \"filter\" to findOne() must be an object, got ahmadalem\n    at model.Query.Query.findOne (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:2216:16)\n    at Function.findOne (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:2163:13)\n    at findUser (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\User.js:60:15)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:13:20\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"bcrypt.salt is not a function bcrypt.salt is not a function","stack":"TypeError: bcrypt.salt is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:17:29\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"\"","kind":"ObjectId","value":"","path":"orders","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"\" at path \"orders\" Cast to ObjectId failed for value \"\" at path \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"\" at path \"orders\"\n    at ObjectId.cast (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schema\\objectid.js:269:11)\n    at ObjectId.SchemaType.applySetters (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1072:12)\n    at ObjectId.SchemaType.getDefault (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1001:25)\n    at $__applyDefaults (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:414:22)\n    at model.Document (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:136:7)\n    at model.Model (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:106:12)\n    at new model (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:4681:15)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:3047:22\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:3083:7\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:3082:15\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:31:5\n    at new Promise (<anonymous>)\n    at promiseOrCallback (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:30:10)\n    at Function.create (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:3017:10)\n    at addUser (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\User.js:56:15)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"errors":{"email":{"name":"ValidatorError","message":"Path `email` is required.","properties":{"message":"Path `email` is required.","type":"required","path":"email"},"kind":"required","path":"email"},"username":{"name":"ValidatorError","message":"Path `username` is required.","properties":{"message":"Path `username` is required.","type":"required","path":"username"},"kind":"required","path":"username"}},"_message":"User validation failed","level":"error","message":"User validation failed: email: Path `email` is required., username: Path `username` is required. User validation failed: email: Path `email` is required., username: Path `username` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required., username: Path `username` is required.\n    at model.Document.invalidate (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2598:32)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2418:17\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1222:9\n    at processTicksAndRejections (internal/process/task_queues.js:76:11)"}
{"errors":{"email":{"name":"ValidatorError","message":"Path `email` is required.","properties":{"message":"Path `email` is required.","type":"required","path":"email"},"kind":"required","path":"email"},"username":{"name":"ValidatorError","message":"Path `username` is required.","properties":{"message":"Path `username` is required.","type":"required","path":"username"},"kind":"required","path":"username"}},"_message":"User validation failed","level":"error","message":"User validation failed: email: Path `email` is required., username: Path `username` is required. User validation failed: email: Path `email` is required., username: Path `username` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required., username: Path `username` is required.\n    at model.Document.invalidate (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2598:32)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2418:17\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1222:9\n    at processTicksAndRejections (internal/process/task_queues.js:76:11)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"errors":{"email":{"name":"ValidatorError","message":"Path `email` is required.","properties":{"message":"Path `email` is required.","type":"required","path":"email"},"kind":"required","path":"email"},"username":{"name":"ValidatorError","message":"Path `username` is required.","properties":{"message":"Path `username` is required.","type":"required","path":"username"},"kind":"required","path":"username"}},"_message":"User validation failed","level":"error","message":"User validation failed: email: Path `email` is required., username: Path `username` is required. User validation failed: email: Path `email` is required., username: Path `username` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required., username: Path `username` is required.\n    at model.Document.invalidate (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2598:32)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2418:17\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1222:9\n    at processTicksAndRejections (internal/process/task_queues.js:76:11)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"errors":{"email":{"name":"ValidatorError","message":"Path `email` is required.","properties":{"message":"Path `email` is required.","type":"required","path":"email"},"kind":"required","path":"email"},"username":{"name":"ValidatorError","message":"Path `username` is required.","properties":{"message":"Path `username` is required.","type":"required","path":"username"},"kind":"required","path":"username"}},"_message":"User validation failed","level":"error","message":"User validation failed: email: Path `email` is required., username: Path `username` is required. User validation failed: email: Path `email` is required., username: Path `username` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required., username: Path `username` is required.\n    at model.Document.invalidate (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2598:32)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2418:17\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1222:9\n    at processTicksAndRejections (internal/process/task_queues.js:76:11)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"user.generateAuthToken is not a function user.generateAuthToken is not a function","stack":"TypeError: user.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:30:31\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
                                                                                                                                                                                                                                                                                                                                                             {"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"user.generateAuthToken is not a function user.generateAuthToken is not a function","stack":"TypeError: user.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:31:31\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"newUser.generateAuthToken is not a function newUser.generateAuthToken is not a function","stack":"TypeError: newUser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:34\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"driver":true,"name":"MongoError","index":0,"code":11000,"keyPattern":{"email":1},"keyValue":{"email":"ayoubal252em@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: ecommerce-website.users index: email_1 dup key: { email: \"ayoubal252em@gmail.com\" } E11000 duplicate key error collection: ecommerce-website.users index: email_1 dup key: { email: \"ayoubal252em@gmail.com\" }","stack":"MongoError: E11000 duplicate key error collection: ecommerce-website.users index: email_1 dup key: { email: \"ayoubal252em@gmail.com\" }\n    at Function.create (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\core\\error.js:57:12)\n    at toError (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\utils.js:123:22)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\operations\\common_functions.js:265:39\n    at handler (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\core\\sdam\\topology.js:942:24)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:356:13\n    at handleOperationResult (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\core\\sdam\\server.js:558:5)\n    at MessageStream.messageHandler (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\connection.js:277:5)\n    at MessageStream.emit (events.js:223:5)\n    at processIncomingData (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at doWrite (_stream_writable.js:435:12)\n    at writeOrBuffer (_stream_writable.js:419:5)\n    at MessageStream.Writable.write (_stream_writable.js:309:11)\n    at Socket.ondata (_stream_readable.js:728:22)\n    at Socket.emit (events.js:223:5)\n    at addChunk (_stream_readable.js:309:12)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ username: 'ahmedajdle', email: 'ayoubal252em@gmail.com' }\"","kind":"Array","value":{"username":"ahmedajdle","email":"ayoubal252em@gmail.com"},"path":"$or","level":"error","message":"Cast to Array failed for value \"{ username: 'ahmedajdle', email: 'ayoubal252em@gmail.com' }\" at path \"$or\" for model \"User\" Cast to Array failed for value \"{ username: 'ahmedajdle', email: 'ayoubal252em@gmail.com' }\" at path \"$or\" for model \"User\"","stack":"CastError: Cast to Array failed for value \"{ username: 'ahmedajdle', email: 'ayoubal252em@gmail.com' }\" at path \"$or\" for model \"User\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"newUser.generateAuthToken is not a function newUser.generateAuthToken is not a function","stack":"TypeError: newUser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:40\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"newUser.generateAuthToken is not a function newUser.generateAuthToken is not a function","stack":"TypeError: newUser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:40\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"fuckingser.generateAuthToken is not a function fuckingser.generateAuthToken is not a function","stack":"TypeError: fuckingser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:37\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"fuckingser.generateAuthToken is not a function fuckingser.generateAuthToken is not a function","stack":"TypeError: fuckingser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:43\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"fuckingser.generateAuthToken is not a function fuckingser.generateAuthToken is not a function","stack":"TypeError: fuckingser.generateAuthToken is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\signUp.js:36:43\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"findCategorie is not a function findCategorie is not a function","stack":"TypeError: findCategorie is not a function\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\categorie.js:21:27\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'clothes' }\"","kind":"string","value":{"categorie":"clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"{ categorie: 'Clothes' }\"","kind":"string","value":{"categorie":"Clothes"},"path":"categorie","reason":null,"level":"error","message":"Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\" Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"","stack":"CastError: Cast to string failed for value \"{ categorie: 'Clothes' }\" at path \"categorie\" for model \"Categorie\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Parameter \"filter\" to findOne() must be an object, got Mecatronic Parameter \"filter\" to findOne() must be an object, got Mecatronic","stack":"ObjectParameterError: Parameter \"filter\" to findOne() must be an object, got Mecatronic\n    at model.Query.Query.findOne (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:2216:16)\n    at Function.findOne (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\model.js:2163:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\categorie.js:14:37\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"errors":{"categorie":{"name":"ValidatorError","message":"Path `categorie` is required.","properties":{"message":"Path `categorie` is required.","type":"required","path":"categorie","value":null},"kind":"required","path":"categorie","value":null}},"_message":"Categorie validation failed","level":"error","message":"Categorie validation failed: categorie: Path `categorie` is required. Categorie validation failed: categorie: Path `categorie` is required.","stack":"ValidationError: Categorie validation failed: categorie: Path `categorie` is required.\n    at model.Document.invalidate (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2598:32)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\document.js:2418:17\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\schematype.js:1222:9\n    at processTicksAndRejections (internal/process/task_queues.js:76:11)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Categorie is not defined Categorie is not defined","stack":"ReferenceError: Categorie is not defined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:22:3\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"categorie is not defined categorie is not defined","stack":"ReferenceError: categorie is not defined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:80:24\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"5f5a527e67573b3b20a95\"","kind":"ObjectId","value":"5f5a527e67573b3b20a95","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\" Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"","stack":"CastError: Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Joi.ObjectId is not a function Joi.ObjectId is not a function","stack":"TypeError: Joi.ObjectId is not a function\n    at joiValidateProduct (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\Product.js:38:22)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:72:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Immediate.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at processImmediate (internal/timers.js:441:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Joi.ObjectId is not a function Joi.ObjectId is not a function","stack":"TypeError: Joi.ObjectId is not a function\n    at joiValidateProduct (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\Product.js:38:22)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:72:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Immediate.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at processImmediate (internal/timers.js:441:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Joi.ObjectId is not a function Joi.ObjectId is not a function","stack":"TypeError: Joi.ObjectId is not a function\n    at joiValidateProduct (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\Product.js:38:22)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:72:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Immediate.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at processImmediate (internal/timers.js:441:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Cannot read property 'required' of undefined Cannot read property 'required' of undefined","stack":"TypeError: Cannot read property 'required' of undefined\n    at joiValidateProduct (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\Product.js:38:31)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:72:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Immediate.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at processImmediate (internal/timers.js:441:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Joi.objectId is not a function Joi.objectId is not a function","stack":"TypeError: Joi.objectId is not a function\n    at joiValidateProduct (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\models\\Product.js:38:22)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:72:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Immediate.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at processImmediate (internal/timers.js:441:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"5f5a527e67573b3b20a95\"","kind":"ObjectId","value":"5f5a527e67573b3b20a95","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\" Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"","stack":"CastError: Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"5f5a527e67573b3b20a95\"","kind":"ObjectId","value":"5f5a527e67573b3b20a95","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\" Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"","stack":"CastError: Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"5f5a527e67573b3b20a95\"","kind":"ObjectId","value":"5f5a527e67573b3b20a95","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\" Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"","stack":"CastError: Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Cannot access 'product' before initialization Cannot access 'product' before initialization","stack":"ReferenceError: Cannot access 'product' before initialization\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:82:15\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:23:5\n    at Array.<anonymous> (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\multer\\lib\\make-middleware.js:53:37)\n    at listener (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\on-finished\\index.js:169:15)\n    at onFinish (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\on-finished\\index.js:100:5)\n    at callback (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\ee-first\\index.js:55:10)\n    at IncomingMessage.onevent (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\ee-first\\index.js:93:5)\n    at IncomingMessage.emit (events.js:228:7)\n    at endReadableNT (_stream_readable.js:1185:12)\n    at processTicksAndRejections (internal/process/task_queues.js:81:21)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"stringValue":"\"5f5a527e67573b3b20a95\"","kind":"ObjectId","value":"5f5a527e67573b3b20a95","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\" Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"","stack":"CastError: Cast to ObjectId failed for value \"5f5a527e67573b3b20a95\" at path \"_id\" for model \"Product\"\n    at model.Query.exec (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4367:21)\n    at model.Query.Query.then (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongoose\\lib\\query.js:4459:15)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_INVALID_ARG_TYPE","level":"error","message":"The \"path\" argument must be of type string. Received type undefined The \"path\" argument must be of type string. Received type undefined","stack":"TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string. Received type undefined\n    at validateString (internal/validators.js:112:11)\n    at Object.join (path.js:375:7)\n    at removeFile (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\middlewares\\multer.js:28:18)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\product.js:92:5\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_HTTP_INVALID_STATUS_CODE","level":"error","message":"Invalid status code: The order cannot be created Invalid status code: The order cannot be created","stack":"RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: The order cannot be created\n    at ServerResponse.writeHead (_http_server.js:246:11)\n    at ServerResponse._implicitHeader (_http_server.js:237:8)\n    at write_ (_http_outgoing.js:607:9)\n    at ServerResponse.end (_http_outgoing.js:717:5)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:221:10)\n    at ServerResponse.json (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:267:15)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:16:28\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Cannot read property 'length' of undefined Cannot read property 'length' of undefined","stack":"TypeError: Cannot read property 'length' of undefined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:40:14\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","message":"Cannot set headers after they are sent to the client Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:170:12)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:40:39\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"moment is not defined moment is not defined","stack":"ReferenceError: moment is not defined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:30:14\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"moment is not defined moment is not defined","stack":"ReferenceError: moment is not defined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:30:14\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","message":"Cannot set headers after they are sent to the client Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:170:12)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:50:39\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","message":"Cannot set headers after they are sent to the client Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:170:12)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:50:39\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","message":"Cannot set headers after they are sent to the client Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:170:12)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:49:39\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"yesterday is not defined yesterday is not defined","stack":"ReferenceError: yesterday is not defined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:32:24\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"code":"ERR_HTTP_HEADERS_SENT","level":"error","message":"Cannot set headers after they are sent to the client Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\response.js:170:12)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:54:39\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"level":"error","message":"Cannot read property 'push' of undefined Cannot read property 'push' of undefined","stack":"TypeError: Cannot read property 'push' of undefined\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:17:17\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\routes\\orders.js:16:21\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"ok":0,"code":2,"codeName":"BadValue","name":"MongoError","level":"error","message":"unknown top level operator: $__ unknown top level operator: $__","stack":"MongoError: unknown top level operator: $__\n    at MessageStream.messageHandler (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\connection.js:268:20)\n    at MessageStream.emit (events.js:223:5)\n    at processIncomingData (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at doWrite (_stream_writable.js:435:12)\n    at writeOrBuffer (_stream_writable.js:419:5)\n    at MessageStream.Writable.write (_stream_writable.js:309:11)\n    at Socket.ondata (_stream_readable.js:728:22)\n    at Socket.emit (events.js:223:5)\n    at addChunk (_stream_readable.js:309:12)\n    at readableAddChunk (_stream_readable.js:290:11)\n    at Socket.Readable.push (_stream_readable.js:224:10)\n    at TCP.onStreamRead (internal/stream_base_commons.js:181:23)"}
{"ok":0,"code":2,"codeName":"BadValue","name":"MongoError","level":"error","message":"unknown top level operator: $__ unknown top level operator: $__","stack":"MongoError: unknown top level operator: $__\n    at MessageStream.messageHandler (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\connection.js:268:20)\n    at MessageStream.emit (events.js:223:5)\n    at processIncomingData (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (C:\\Users\\JetbrainArb\\Desktop\\Ecom-Website\\ecom-backend-project\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at doWrite (_stream_writable.js:435:12)\n    at writeOrBuffer (_stream_writable.js:419:5)\n    at MessageStream.Writable.write (_stream_writable.js:309:11)\n    at Socket.ondata (_stream_readable.js:728:22)\n    at Socket.emit (events.js:223:5)\n    at addChunk (_stream_readable.js:309:12)\n    at readableAddChunk (_stream_readable.js:290:11)\n    at Socket.Readable.push (_stream_readable.js:224:10)\n    at TCP.onStreamRead (internal/stream_base_commons.js:181:23)"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
{"message":"App is listening on port 5000 ...","level":"info"}
{"message":"Connected to MongoDB...","level":"info"}
